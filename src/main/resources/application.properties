#database
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5433/propostas}
spring.datasource.username=${DATABASE_USERNAME:root}
spring.datasource.password=${DATABASE_PASSWORD:root}
spring.datasource.driver-class-name=org.postgresql.Driver

#jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#integracoes
api.analise.url=${ANALISE_URL:http://localhost:9999/api/solicitacao}
api.cartoes.url=${CARTOES_URL:http://localhost:8888/api/cartoes}

#scheduler
periodicidade.associa-cartao-proposta = 100000

#feign
feign.client.config.default.read-timeout=5000
feign.client.config.default.connect-timeout=5000

#actuator
management.endpoints.web.exposure.include=info,health,metrics
management.endpoint.health.show-details=always

# oauth2
# indica ao Spring Security onde ele pode  encontrar o authorization server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/propostas}

# indica ao Spring Secutiry onde ele pode encontrar as chaves para conseguir validar a assinatura do token
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/propostas/protocol/openid-connect/certs}



